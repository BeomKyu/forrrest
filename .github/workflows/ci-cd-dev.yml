# This is a basic workflow to help you get started with Actions

name: CI/CI Pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    tags:
     - "dev*"
    paths:
      - "forrrest-authservice/**"
      - "forrrest-appmanagementservice/**"
      - "docker-compose-dev.yml"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code (with submodules)
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set execute permission on gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: List build/libs directory to verify JAR file
        run: ls -al build/libs

      - name: List authservice build directory
        run: ls -al forrrest-authservice/build/libs

      - name: List appmanagementservice build directory
        run: ls -al forrrest-appmanagementservice/build/libs


      - name: Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Images
        run: |
          DOCKER_BUILDKIT=0 docker build -t ${{ secrets.DOCKER_USERNAME }}/forrrest-auth:dev -f forrrest-authservice/Dockerfile-auth forrrest-authservice
          DOCKER_BUILDKIT=0 docker build -t ${{ secrets.DOCKER_USERNAME }}/forrrest-app-management:dev -f forrrest-appmanagementservice/Dockerfile-app forrrest-appmanagementservice

      - name: Push Docker Images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/forrrest-auth:dev
          docker push ${{ secrets.DOCKER_USERNAME }}/forrrest-app-management:dev

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
      - name: Deploy to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          ssh -p ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_SERVER }} "cd ~/forrrest/dev && docker-compose -f docker-compose-dev.yml down && docker-compose -f docker-compose-dev.yml pull && docker-compose -f docker-compose-dev.yml up -d"
